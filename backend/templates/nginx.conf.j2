# Managed by Load Balancer UI for: {{ service.domain_name }}

# Define the load balancing pool of backend servers
upstream pool_{{ pool.id }} {
    {% if pool.load_balancing_algorithm != 'round_robin' %}
    {{ pool.load_balancing_algorithm }};
    {% endif %}

    # Loop through the backend servers and add them to the pool with health check parameters
    {% for server in pool.backend_servers %}
    server {{ server.host }}:{{ server.port }}{% if server.max_fails is not none %} max_fails={{ server.max_fails }}{% endif %}{% if server.fail_timeout %} fail_timeout={{ server.fail_timeout }}{% endif %};
    {% endfor %}
}

# HTTP server block for redirection to HTTPS
{% if service.force_ssl %}
server {
    listen 80;
    server_name {{ service.domain_name }};
    location / {
        return 301 https://$host$request_uri;
    }
}
{% endif %}

# Main server block
server {
    {% if not service.force_ssl %}
    listen 80;
    {% endif %}
    
    listen 443 ssl;
    {% if service.http2_support %}
    http2 on;
    {% endif %}
    
    server_name {{ service.domain_name }};

    # WAF (ModSecurity) Integration
    {% if service.waf_enabled %}
    modsecurity on;
    # 'modsecurity_rules_file' is removed because the base image loads it globally.
    {% endif %}
    
    # Access Control
    {% if service.access_list_ips %}
        {% for ip in service.access_list_ips %}
            {% if ip.strip() %}
        {{ service.access_list_type }} {{ ip.strip() }};
            {% endif %}
        {% endfor %}
        deny all;
    {% endif %}

    # Basic Authentication
    {% if service.basic_auth_user %}
        auth_basic "Restricted Area";
        auth_basic_user_file /data/htpasswd/service_{{ service.id }};
    {% endif %}

    # SSL Configuration
    {% if service.certificate_name and service.certificate_name != 'dummy' %}
    ssl_certificate /etc/letsencrypt/live/{{ service.certificate_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ service.certificate_name }}/privkey.pem;
    {% else %}
    ssl_certificate /etc/nginx/certs/dummy/dummy.crt;
    ssl_certificate_key /etc/nginx/certs/dummy/dummy.key;
    {% endif %}

    # HSTS Header
    {% if service.hsts_enabled %}
    add_header Strict-Transport-Security "max-age=31536000{% if service.hsts_subdomains %}; includeSubDomains{% endif %}" always;
    {% endif %}

    location / {
        proxy_pass {{ service.forward_scheme }}://pool_{{ pool.id }};
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        {% if service.websockets_support %}
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        {% endif %}

        {{ service.advanced_config | safe }}
    }
}
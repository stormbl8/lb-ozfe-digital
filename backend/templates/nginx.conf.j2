# Managed by Load Balancer UI for: {{ service.domain_name }}
#
# HTTP server block for redirection to HTTPS
# This block is only generated if "Force SSL" is enabled.
{% if service.force_ssl %}
server {
    listen 80;
    server_name {{ service.domain_name }};

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}
{% endif %}

# Main HTTPS server block
server {
    # Listen on port 80 if SSL is not forced, otherwise only listen on 443
    {% if not service.force_ssl %}
    listen 80;
    {% endif %}
    listen 443 ssl{% if service.http2_support %} http2{% endif %};
    
    server_name {{ service.domain_name }};

    # WAF (ModSecurity) Integration
    {% if service.waf_enabled %}
    modsecurity on;
    modsecurity_rules_file /etc/modsecurity.d/modsecurity.conf;
    {% endif %}

    # SSL Configuration
    {% if service.certificate_name and service.certificate_name != 'dummy' %}
    ssl_certificate /etc/letsencrypt/live/{{ service.certificate_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ service.certificate_name }}/privkey.pem;
    {% else %}
    ssl_certificate /etc/nginx/certs/dummy/dummy.crt;
    ssl_certificate_key /etc/nginx/certs/dummy/dummy.key;
    {% endif %}

    # HSTS Header
    {% if service.hsts_enabled %}
    add_header Strict-Transport-Security "max-age=31536000{% if service.hsts_subdomains %}; includeSubDomains{% endif %}" always;
    {% endif %}

    # Caching for static assets
    {% if service.cache_assets %}
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
      expires 1M;
      access_log off;
      add_header Cache-Control "public";
      proxy_pass {{ service.forward_scheme }}://{{ service.backend_host }}:{{ service.backend_port }};
    }
    {% endif %}

    location / {
        proxy_pass {{ service.forward_scheme }}://{{ service.backend_host }}:{{ service.backend_port }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        {% if service.websockets_support %}
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        {% endif %}

        {{ service.advanced_config | safe }}
    }
}
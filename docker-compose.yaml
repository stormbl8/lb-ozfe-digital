volumes:
  app_data:
  postgres_data:

services:
  frontend:
    build: ./frontend
    container_name: lb-ui-frontend
    ports:
      - "88:88"
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: lb-ui-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    networks:
      - app-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - app_data:/data
    env_file:
      - .env
    depends_on:
      - postgres

  nginx:
    build: ./nginx
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "10000-10100:10000-10100/tcp"
      - "10000-10100:10000-10100/udp"
    volumes:
      # Mount the entire app_data volume to /data
      - app_data:/data
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    container_name: lb-ui-postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

networks:
  app-network:
    driver: bridge
# Map for dynamic SSL certificate loading based on SNI
map $ssl_server_name $ssl_certificate_path {
    hostnames;
    default /data/certs/dummy/dummy.crt; # Default dummy certificate
}

map $ssl_server_name $ssl_certificate_key_path {
    hostnames;
    default /data/certs/dummy/dummy.key; # Default dummy key
}

# This new server block exposes NGINX's internal stats on port 8081
# It's only accessible from within the Docker network for security.
server {
    listen 8081;
    server_name localhost;

    location /nginx_status {
        stub_status;
        allow 172.16.0.0/12; # Allow access from Docker's default network ranges
        deny all;
    }
}


# This is a generic default server to catch any non-matching requests
server {
    listen 80 default_server;
    listen 443 ssl default_server;
    
    ssl_certificate /data/certs/dummy/dummy.crt; # Fallback for default server
    ssl_certificate_key /data/certs/dummy/dummy.key; # Fallback for default server
    
    ssl_protocols TLSv1.2 TLSv1.3; # Enforce strong protocols
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Basic DDoS protection: limit connections and timeouts
    # limit_conn per_ip 10; # Example: limit 10 connections per IP
    client_body_timeout 10s;
    client_header_timeout 10s;
    send_timeout 10s;
    
    server_name _;
    return 404;
}

# This is a required include file that loads all of your backend-generated configs.
# It is placed here to ensure it's processed after the default server.
include /data/nginx_proxy_configs/*.conf;
include /data/nginx_stream_configs/*.conf;